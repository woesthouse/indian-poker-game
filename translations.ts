
import { Translations } from './types';

export const translations: Translations = {
  en: {
    indianPokerTitle: "Indian Poker",
    welcomeMessage: "Welcome to Indian Poker!",
    startGame: "Start Game",
    newGameStarted: "New game started. Preparing for the first round...",
    dealingCards: "Dealing cards...",
    yourTurn: "Your turn.",
    aiTurn: "AI's turn.",
    check: "Check",
    call: "Call",
    bet: "Bet",
    raiseTo: "Raise to",
    fold: "Fold",
    antePaid: "Ante paid.",
    pot: "Pot",
    carryOver: "Carry-over",
    showdown: "Showdown!",
    yourCard: "Your card",
    aiCard: "AI's card",
    nextRound: "Next Round",
    gameOver: "Game Over",
    playAgain: "Play Again",
    yourActions: "Your Actions",
    betAmountPlaceholder: "Bet Amount",
    seeOpponentCard: "You can see your opponent's cards, but not yours. Bet wisely and win all your chips!",
    playerName: "You",
    aiName: "AI Opponent",
    chipsLabel: "Chips:",
    betLabel: "Bet:",
    antePaidPotTurnMessage: (potAmount, turnMessage, action1, action2) => `Ante paid. Pot: ${potAmount}. ${turnMessage} You can ${action1} or ${action2}.`,
    playerFolds: (playerName, opponentName, potAmount) => `${playerName} folds. ${opponentName} wins the pot of ${potAmount}.`,
    playerFoldsWithPenalty: (playerName, opponentName, potAmount, penaltyAmount) => `${playerName} folds with a 10! Their card is revealed. They pay a ${penaltyAmount} chip penalty. ${opponentName} wins the pot of ${potAmount} and the penalty chips.`,
    penaltyFold10: (playerName) => `${playerName} pays a penalty of 10 chips for folding with a 10.`, // Kept for now, but playerFoldsWithPenalty is preferred
    playerCalls: (playerName, amount) => `${playerName} calls ${amount}. Showdown!`,
    playerChecks: (playerName) => `${playerName} checks.`,
    bothCheckShowdown: "Both players check. Showdown!",
    opponentTurnInfo: (opponentName, action1, action2) => `${opponentName}'s turn. They can ${action1} or ${action2}.`,
    playerBetsOrRaises: (playerName, actionString, amount) => `${playerName} ${actionString} ${amount}.`,
    opponentTurnCallRaise: (opponentName, callAmount) => `${opponentName}'s turn. Call ${callAmount} or Raise.`,
    notEnoughChipsBetRaise: (playerName, amount) => `${playerName} does not have enough chips to bet/raise to ${amount}.`,
    betRaiseAmountError: "Bet/Raise amount must be greater than your current bet and the minimum required.",
    raiseAmountTooLowError: (minAmount) => `Raise must be to a total of at least ${minAmount}.`,
    youWinPot: (potAmount) => `You win the pot of ${potAmount}!`,
    aiWinsPot: (potAmount) => `AI wins the pot of ${potAmount}!`,
    tieCarryOver: (potAmount) => `It's a tie! The pot of ${potAmount} carries over.`,
    youWinGame: "Congratulations! You win the game! AI is out of chips.",
    aiWinsGame: "Game Over. AI wins the game! You are out of chips.",
    betButtonText: (action, amount) => `${action} ${amount}`,
    callButtonText: (amount) => `Call ${amount}`,
    roundOverMessage: "Round Over. Click 'Next Round' to continue.",
    // Fix: Add 'error' translation
    error: (message: string) => `Error: ${message}`,
  },
  ko: {
    indianPokerTitle: "인디언 포커",
    welcomeMessage: "인디언 포커에 오신 것을 환영합니다!",
    startGame: "게임 시작",
    newGameStarted: "새 게임이 시작되었습니다. 첫 라운드를 준비 중입니다...",
    dealingCards: "카드를 섞는 중입니다...",
    yourTurn: "당신의 차례입니다.",
    aiTurn: "AI의 차례입니다.",
    check: "체크",
    call: "콜",
    bet: "베팅",
    raiseTo: "레이즈",
    fold: "포기",
    antePaid: "기본금 지불됨.",
    pot: "판돈",
    carryOver: "캐리 오버",
    showdown: "쇼다운!",
    yourCard: "당신의 카드",
    aiCard: "AI의 카드",
    nextRound: "다음 라운드",
    gameOver: "게임 종료",
    playAgain: "다시 플레이",
    yourActions: "당신의 행동",
    betAmountPlaceholder: "베팅 금액",
    seeOpponentCard: "상대방의 카드는 보이지만, 당신의 카드는 보이지 않습니다. 현명하게 베팅하여 상대의 모든 칩을 따세요!",
    playerName: "당신",
    aiName: "AI 상대",
    chipsLabel: "보유금:",
    betLabel: "베팅:",
    antePaidPotTurnMessage: (potAmount, turnMessage, action1, action2) => `기본금 지불됨. 판돈: ${potAmount}. ${turnMessage} ${action1} 또는 ${action2} 할 수 있습니다.`,
    playerFolds: (playerName, opponentName, potAmount) => `${playerName}님이 포기했습니다. ${opponentName}님이 ${potAmount}의 판돈을 가져갑니다.`,
    playerFoldsWithPenalty: (playerName, opponentName, potAmount, penaltyAmount) => `${playerName}님이 10 카드로 포기했습니다! ${penaltyAmount} 만큼 페널티를 지불합니다. ${opponentName}님이 ${potAmount}의 판돈과 페널티을 가져갑니다.`,
    penaltyFold10: (playerName) => `${playerName}님이 10 카드로 포기하여 보유금 10개의 페널티를 지불합니다.`, // playerFoldsWithPenalty 사용 권장
    playerCalls: (playerName, amount) => `${playerName}님이 ${amount}을 콜합니다. 쇼다운!`,
    playerChecks: (playerName) => `${playerName}님이 체크합니다.`,
    bothCheckShowdown: "두 플레이어 모두 체크했습니다. 쇼다운!",
    opponentTurnInfo: (opponentName, action1, action2) => `${opponentName}의 차례입니다. ${action1} 또는 ${action2} 할 수 있습니다.`,
    playerBetsOrRaises: (playerName, actionString, amount) => `${playerName}님이 ${amount}으로 ${actionString}합니다.`,
    opponentTurnCallRaise: (opponentName, callAmount) => `${opponentName}님의 차례입니다. ${callAmount}을 콜하거나 레이즈하세요.`,
    notEnoughChipsBetRaise: (playerName, amount) => `${playerName}님은 ${amount}으로 베팅/레이즈할 보유금이 충분하지 않습니다.`,
    betRaiseAmountError: "베팅/레이즈 금액은 현재 베팅 및 최소 요구 금액보다 커야 합니다.",
    raiseAmountTooLowError: (minAmount) => `레이즈는 최소 ${minAmount} 이상이어야 합니다.`,
    youWinPot: (potAmount) => `판돈 ${potAmount}을 획득했습니다!`,
    aiWinsPot: (potAmount) => `AI가 판돈 ${potAmount}을 획득했습니다!`,
    tieCarryOver: (potAmount) => `무승부입니다! 판돈 ${potAmount}이 다음 라운드로 이월됩니다.`,
    youWinGame: "축하합니다! 게임에서 승리했습니다! AI는 보유금이 없습니다.",
    aiWinsGame: "게임 종료. AI가 게임에서 승리했습니다! 당신은 보유금이 없습니다.",
    betButtonText: (action, amount) => `${amount} ${action}`,
    callButtonText: (amount) => `${amount} 콜`,
    roundOverMessage: "라운드 종료. '다음 라운드'를 클릭하여 계속하세요.",
    // Fix: Add 'error' translation
    error: (message: string) => `오류: ${message}`,
  },
};